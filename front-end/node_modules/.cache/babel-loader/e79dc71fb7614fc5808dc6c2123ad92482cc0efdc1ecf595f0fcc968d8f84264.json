{"ast":null,"code":"/* import { useRef, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { updateUser } from \"../../features/updateSlice\"\nimport { Navigate } from 'react-router-dom'\n\nfunction Profile(){   \n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [edit, setEdit] = useState(false)\n    const user = useSelector(state => state.user)\n    const auth = useSelector(state => state.auth)\n    const update = useSelector(state => state.update)\n    const remember = useRef()\n    remember.current = auth.remember\n    \n    setTimeout(() => {\n        if(remember.current === false){\n            dispatch({\n                type: \"auth/logout\",\n            })\n            window.location.reload()\n        }\n    }, 10000);\n    \n\n    const dispatch = useDispatch()\n    function handleEdit(){\n        setEdit(true)\n    }\n    \n    const updatedFirstName = useRef()\n    updatedFirstName.current = update.firstName\n    const updatedLastName = useRef()\n    updatedLastName.current = update.lastName\n\n    function updateForm(e){\n        e.preventDefault()\n        dispatch(updateUser({firstName: firstName, lastName: lastName}))\n        setEdit(false)\n        setTimeout(function(){\n            dispatch({\n                type: \"user/update\",\n                payload: {firstName: updatedFirstName.current, lastName: updatedLastName.current}\n            })\n        }, 100)\n    }\n\n    function cancelForm(){\n        setEdit(false)\n    }\n    return <div>\n        {localStorage.getItem('token') &&\n        <main className=\"main bg-dark\">\n            {!edit && <div className=\"header\">\n                <h1>Welcome back<br /><span id=\"name\">{user.firstName} {user.lastName}</span></h1>\n                <button className=\"edit-button\" onClick={() => handleEdit()}>Edit Name</button>\n            </div>}\n            {edit && <div className=\"updateForm\">\n                <form onSubmit={(e) => updateForm(e)}>\n                    <h1>Welcome back</h1>\n                    <div className=\"inputFields\">\n                        <div className=\"input-wrapper\">\n                            <input type=\"text\" id=\"firstName\" placeholder={user.firstName} value={firstName} onChange={(e) => setFirstName(e.target.value)}/>\n                        </div>\n                        <div className=\"input-wrapper\">\n                            <input type=\"lastName\" id=\"lastName\" placeholder={user.lastName} value={lastName} onChange={(e) => setLastName(e.target.value)}/>\n                        </div>\n                    </div>\n                    <div className=\"editButtons\">\n                        <button type=\"submit\" className=\"sign-in-button\">Save</button>\n                        <button className=\"sign-in-button\" onClick={() => cancelForm()}>Cancel</button>\n                    </div>\n                </form>\n            </div>}\n            <h2 className=\"sr-only\">Accounts</h2>\n            <section className=\"account\">\n                <div className=\"account-content-wrapper\">\n                <h3 className=\"account-title\">Argent Bank Checking (x8349)</h3>\n                <p className=\"account-amount\">$2,082.79</p>\n                <p className=\"account-amount-description\">Available Balance</p>\n                </div>\n                <div className=\"account-content-wrapper cta\">\n                <button className=\"transaction-button\">View transactions</button>\n                </div>\n            </section>\n            <section className=\"account\">\n                <div className=\"account-content-wrapper\">\n                <h3 className=\"account-title\">Argent Bank Savings (x6712)</h3>\n                <p className=\"account-amount\">$10,928.42</p>\n                <p className=\"account-amount-description\">Available Balance</p>\n                </div>\n                <div className=\"account-content-wrapper cta\">\n                <button className=\"transaction-button\">View transactions</button>\n                </div>\n            </section>\n            <section className=\"account\">\n                <div className=\"account-content-wrapper\">\n                <h3 className=\"account-title\">Argent Bank Credit Card (x8349)</h3>\n                <p className=\"account-amount\">$184.30</p>\n                <p className=\"account-amount-description\">Current Balance</p>\n                </div>\n                <div className=\"account-content-wrapper cta\">\n                <button className=\"transaction-button\">View transactions</button>\n                </div>\n            </section>\n        </main>}\n        {!localStorage.getItem('token') && <Navigate to=\"/signin\" replace={true}/>}\n    </div>\n}\n\nexport default Profile */","map":{"version":3,"names":[],"sources":["/home/mehdi/Documents/nammi/src/components/profile/Profile.js"],"sourcesContent":["/* import { useRef, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { updateUser } from \"../../features/updateSlice\"\nimport { Navigate } from 'react-router-dom'\n\nfunction Profile(){   \n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [edit, setEdit] = useState(false)\n    const user = useSelector(state => state.user)\n    const auth = useSelector(state => state.auth)\n    const update = useSelector(state => state.update)\n    const remember = useRef()\n    remember.current = auth.remember\n    \n    setTimeout(() => {\n        if(remember.current === false){\n            dispatch({\n                type: \"auth/logout\",\n            })\n            window.location.reload()\n        }\n    }, 10000);\n    \n\n    const dispatch = useDispatch()\n    function handleEdit(){\n        setEdit(true)\n    }\n    \n    const updatedFirstName = useRef()\n    updatedFirstName.current = update.firstName\n    const updatedLastName = useRef()\n    updatedLastName.current = update.lastName\n\n    function updateForm(e){\n        e.preventDefault()\n        dispatch(updateUser({firstName: firstName, lastName: lastName}))\n        setEdit(false)\n        setTimeout(function(){\n            dispatch({\n                type: \"user/update\",\n                payload: {firstName: updatedFirstName.current, lastName: updatedLastName.current}\n            })\n        }, 100)\n    }\n\n    function cancelForm(){\n        setEdit(false)\n    }\n    return <div>\n        {localStorage.getItem('token') &&\n        <main className=\"main bg-dark\">\n            {!edit && <div className=\"header\">\n                <h1>Welcome back<br /><span id=\"name\">{user.firstName} {user.lastName}</span></h1>\n                <button className=\"edit-button\" onClick={() => handleEdit()}>Edit Name</button>\n            </div>}\n            {edit && <div className=\"updateForm\">\n                <form onSubmit={(e) => updateForm(e)}>\n                    <h1>Welcome back</h1>\n                    <div className=\"inputFields\">\n                        <div className=\"input-wrapper\">\n                            <input type=\"text\" id=\"firstName\" placeholder={user.firstName} value={firstName} onChange={(e) => setFirstName(e.target.value)}/>\n                        </div>\n                        <div className=\"input-wrapper\">\n                            <input type=\"lastName\" id=\"lastName\" placeholder={user.lastName} value={lastName} onChange={(e) => setLastName(e.target.value)}/>\n                        </div>\n                    </div>\n                    <div className=\"editButtons\">\n                        <button type=\"submit\" className=\"sign-in-button\">Save</button>\n                        <button className=\"sign-in-button\" onClick={() => cancelForm()}>Cancel</button>\n                    </div>\n                </form>\n            </div>}\n            <h2 className=\"sr-only\">Accounts</h2>\n            <section className=\"account\">\n                <div className=\"account-content-wrapper\">\n                <h3 className=\"account-title\">Argent Bank Checking (x8349)</h3>\n                <p className=\"account-amount\">$2,082.79</p>\n                <p className=\"account-amount-description\">Available Balance</p>\n                </div>\n                <div className=\"account-content-wrapper cta\">\n                <button className=\"transaction-button\">View transactions</button>\n                </div>\n            </section>\n            <section className=\"account\">\n                <div className=\"account-content-wrapper\">\n                <h3 className=\"account-title\">Argent Bank Savings (x6712)</h3>\n                <p className=\"account-amount\">$10,928.42</p>\n                <p className=\"account-amount-description\">Available Balance</p>\n                </div>\n                <div className=\"account-content-wrapper cta\">\n                <button className=\"transaction-button\">View transactions</button>\n                </div>\n            </section>\n            <section className=\"account\">\n                <div className=\"account-content-wrapper\">\n                <h3 className=\"account-title\">Argent Bank Credit Card (x8349)</h3>\n                <p className=\"account-amount\">$184.30</p>\n                <p className=\"account-amount-description\">Current Balance</p>\n                </div>\n                <div className=\"account-content-wrapper cta\">\n                <button className=\"transaction-button\">View transactions</button>\n                </div>\n            </section>\n        </main>}\n        {!localStorage.getItem('token') && <Navigate to=\"/signin\" replace={true}/>}\n    </div>\n}\n\nexport default Profile */"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}