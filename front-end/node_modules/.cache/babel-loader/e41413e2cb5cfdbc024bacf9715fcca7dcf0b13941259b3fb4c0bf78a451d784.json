{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { userSliceReducer } from \"../features/userSlice\";\nimport { authSliceReducer } from \"../features/authSlice\";\nimport { updateSliceReducer } from \"../features/updateSlice\";\nimport { signupSliceReducer } from \"../features/signupSlice\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst reducer = combineReducers({\n  user: userSliceReducer,\n  auth: authSliceReducer,\n  update: updateSliceReducer,\n  signup: signupSliceReducer\n});\nconst persistedReducer = persistReducer(persistConfig, reducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\n\n/* export const store = configureStore({\n    reducer: {\n        user: userSliceReducer,\n        auth: authSliceReducer,\n        signup: signupSliceReducer,\n        update: updateSliceReducer\n    }\n}) */","map":{"version":3,"names":["configureStore","combineReducers","userSliceReducer","authSliceReducer","updateSliceReducer","signupSliceReducer","storage","persistReducer","persistConfig","key","reducer","user","auth","update","signup","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck"],"sources":["/home/mehdi/Documents/nammi/src/app/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { userSliceReducer } from \"../features/userSlice\";\nimport { authSliceReducer } from \"../features/authSlice\";\nimport { updateSliceReducer } from \"../features/updateSlice\";\nimport { signupSliceReducer } from \"../features/signupSlice\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n};\n\nconst reducer = combineReducers({\n    user: userSliceReducer,\n    auth: authSliceReducer,\n    update: updateSliceReducer,\n    signup: signupSliceReducer,\n})\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n        serializableCheck: false\n    })\n})\n\n/* export const store = configureStore({\n    reducer: {\n        user: userSliceReducer,\n        auth: authSliceReducer,\n        signup: signupSliceReducer,\n        update: updateSliceReducer\n    }\n}) */"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,QAAQ,eAAe;AAE9C,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXH;AACJ,CAAC;AAED,MAAMI,OAAO,GAAGT,eAAe,CAAC;EAC5BU,IAAI,EAAET,gBAAgB;EACtBU,IAAI,EAAET,gBAAgB;EACtBU,MAAM,EAAET,kBAAkB;EAC1BU,MAAM,EAAET;AACZ,CAAC,CAAC;AAEF,MAAMU,gBAAgB,GAAGR,cAAc,CAACC,aAAa,EAAEE,OAAO,CAAC;AAE/D,OAAO,MAAMM,KAAK,GAAGhB,cAAc,CAAC;EAChCU,OAAO,EAAEK,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC;IACvDC,iBAAiB,EAAE;EACvB,CAAC;AACL,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}