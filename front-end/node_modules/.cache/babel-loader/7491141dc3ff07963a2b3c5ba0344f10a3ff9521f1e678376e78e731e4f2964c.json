{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const signInUser = createAsyncThunk('signInUser', async body => {\n  const auth = await fetch(\"http://localhost:3001/api/v1/user/login\", {\n    method: \"POST\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const authData = await auth.json();\n  localStorage.setItem(\"token\", authData.body.token);\n  const userProfile = await fetch(\"http://localhost:3001/api/v1/user/profile\", {\n    method: \"POST\",\n    headers: {\n      \"Authorization\": `Bearer ${authData.body.token}`\n    }\n  });\n  const userData = await userProfile.json();\n  return userData;\n});\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\"\n};\nconst userSlice = createSlice({\n  name: user,\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      const auth = signInUser(action.payload);\n      state.firstName = auth.firstName;\n      state.lastName = auth.lastName;\n    },\n    logout: state => {\n      state.firstName = \"\";\n      state.lastName = \"\";\n      localStorage.setItem(\"token\", \"\");\n    }\n  }\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","signInUser","body","auth","fetch","method","JSON","stringify","headers","authData","json","localStorage","setItem","token","userProfile","userData","initialState","firstName","lastName","userSlice","name","user","reducers","login","state","action","payload","logout"],"sources":["/home/mehdi/Documents/nammi/src/features/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const signInUser = createAsyncThunk('signInUser', async(body) => {\n    const auth = await fetch (\"http://localhost:3001/api/v1/user/login\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n        })\n        const authData = await auth.json()\n        localStorage.setItem(\"token\", authData.body.token)\n        const userProfile = await fetch (\"http://localhost:3001/api/v1/user/profile\", {\n        method: \"POST\",\n        headers: { \"Authorization\" : `Bearer ${authData.body.token}`},\n        })\n        const userData = await userProfile.json()\n        return userData;\n})\n\nconst initialState = {\n    firstName: \"\",\n    lastName: \"\",\n}\n\nconst userSlice = createSlice({\n    name: user,\n    initialState,\n    reducers: {\n        login: (state, action) => {\n            const auth = signInUser(action.payload)\n            state.firstName = auth.firstName\n            state.lastName = auth.lastName\n        },\n        logout: (state) => {\n            state.firstName = \"\"\n            state.lastName = \"\"\n            localStorage.setItem(\"token\", \"\")\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,YAAY,EAAE,MAAME,IAAI,IAAK;EACpE,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,yCAAyC,EAAE;IACjEC,MAAM,EAAE,MAAM;IACdH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAC1BM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAC9C,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,IAAI,EAAE;EAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACP,IAAI,CAACW,KAAK,CAAC;EAClD,MAAMC,WAAW,GAAG,MAAMV,KAAK,CAAE,2CAA2C,EAAE;IAC9EC,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MAAE,eAAe,EAAI,UAASC,QAAQ,CAACP,IAAI,CAACW,KAAM;IAAC;EAC5D,CAAC,CAAC;EACF,MAAME,QAAQ,GAAG,MAAMD,WAAW,CAACJ,IAAI,EAAE;EACzC,OAAOK,QAAQ;AACvB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGpB,WAAW,CAAC;EAC1BqB,IAAI,EAAEC,IAAI;EACVL,YAAY;EACZM,QAAQ,EAAE;IACNC,KAAK,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtB,MAAMtB,IAAI,GAAGF,UAAU,CAACwB,MAAM,CAACC,OAAO,CAAC;MACvCF,KAAK,CAACP,SAAS,GAAGd,IAAI,CAACc,SAAS;MAChCO,KAAK,CAACN,QAAQ,GAAGf,IAAI,CAACe,QAAQ;IAClC,CAAC;IACDS,MAAM,EAAGH,KAAK,IAAK;MACfA,KAAK,CAACP,SAAS,GAAG,EAAE;MACpBO,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBP,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IACrC;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}