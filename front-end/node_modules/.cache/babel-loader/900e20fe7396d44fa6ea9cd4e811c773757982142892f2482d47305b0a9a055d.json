{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { userSliceReducer } from \"../features/userSlice\";\nimport { authSliceReducer } from \"../features/authSlice\";\nimport { updateSliceReducer } from \"../features/updateSlice\";\nimport { signupSliceReducer } from \"../features/signupSlice\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst reducer = combineReducers({\n  user: userSliceReducer,\n  auth: authSliceReducer,\n  signup: signupSliceReducer,\n  update: updateSliceReducer\n});\nconst persistedReducer = persistReducer(persistConfig, reducer);\nexport const store = configureStore({\n  reducer: persistedReducer\n});\nexport const rootReducer = (state, action) => {\n  if (action.type === DESTROY_SESSION) state = undefined;\n};\n\n/* export const store = configureStore({\n    reducer: {\n        user: userSliceReducer,\n        auth: authSliceReducer,\n        signup: signupSliceReducer,\n        update: updateSliceReducer\n    }\n}) */","map":{"version":3,"names":["configureStore","combineReducers","userSliceReducer","authSliceReducer","updateSliceReducer","signupSliceReducer","storage","persistReducer","persistConfig","key","version","reducer","user","auth","signup","update","persistedReducer","store","rootReducer","state","action","type","DESTROY_SESSION","undefined"],"sources":["/home/mehdi/Documents/nammi/src/app/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { userSliceReducer } from \"../features/userSlice\";\nimport { authSliceReducer } from \"../features/authSlice\";\nimport { updateSliceReducer } from \"../features/updateSlice\";\nimport { signupSliceReducer } from \"../features/signupSlice\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n    key: \"root\",\n    version: 1,\n    storage\n};\n\nconst reducer = combineReducers({\n    user: userSliceReducer,\n    auth: authSliceReducer,\n    signup: signupSliceReducer,\n    update: updateSliceReducer\n})\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer\n})\n\nexport const rootReducer = (state, action) => {\n    if (action.type === DESTROY_SESSION)\n        state = undefined;\n\n    \n}\n\n/* export const store = configureStore({\n    reducer: {\n        user: userSliceReducer,\n        auth: authSliceReducer,\n        signup: signupSliceReducer,\n        update: updateSliceReducer\n    }\n}) */"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,QAAQ,eAAe;AAE9C,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVJ;AACJ,CAAC;AAED,MAAMK,OAAO,GAAGV,eAAe,CAAC;EAC5BW,IAAI,EAAEV,gBAAgB;EACtBW,IAAI,EAAEV,gBAAgB;EACtBW,MAAM,EAAET,kBAAkB;EAC1BU,MAAM,EAAEX;AACZ,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAGT,cAAc,CAACC,aAAa,EAAEG,OAAO,CAAC;AAE/D,OAAO,MAAMM,KAAK,GAAGjB,cAAc,CAAC;EAChCW,OAAO,EAAEK;AACb,CAAC,CAAC;AAEF,OAAO,MAAME,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C,IAAIA,MAAM,CAACC,IAAI,KAAKC,eAAe,EAC/BH,KAAK,GAAGI,SAAS;AAGzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}