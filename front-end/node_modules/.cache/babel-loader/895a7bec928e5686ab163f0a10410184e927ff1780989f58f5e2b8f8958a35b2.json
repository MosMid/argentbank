{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const userProfile = createAsyncThunk('userProfile', async () => {\n  const response = await fetch(\"http://localhost:3001/api/v1/user/profile\", {\n    method: \"POST\",\n    headers: {\n      \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n  const data = await response.json();\n  return data;\n});\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\"\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    update: (state, action) => {\n      state.firstName = action.payload.firstName;\n      state.lastName = action.payload.lastName;\n    }\n  },\n  extraReducers: {\n    [userProfile.pending]: () => {\n      //console.log(\"user pending...\")\n    },\n    [userProfile.fulfilled]: (state, action) => {\n      //console.log(\"user fulfilled\")\n      state.firstName = action.payload.body.firstName;\n      state.lastName = action.payload.body.lastName;\n    },\n    [userProfile.rejected]: (state, action) => {\n      //console.log(\"user rejected\") \n      state.error = action.error.message;\n    }\n  }\n});\nexport const userSliceReducer = userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userProfile","response","fetch","method","headers","localStorage","getItem","data","json","initialState","firstName","lastName","userSlice","name","reducers","update","state","action","payload","extraReducers","pending","fulfilled","body","rejected","error","message","userSliceReducer","reducer"],"sources":["/home/mehdi/Documents/nammi/src/features/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const userProfile = createAsyncThunk('userProfile', async() => {\n    const response = await fetch (\"http://localhost:3001/api/v1/user/profile\", {\n    method: \"POST\",\n    headers: { \"Authorization\" : `Bearer ${localStorage.getItem('token')}`},\n    })\n    const data = await response.json()\n    return data;\n})\n\nconst initialState = {\n    firstName: \"\",\n    lastName: \"\",\n}\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {\n        update: (state, action) => {\n            state.firstName = action.payload.firstName\n            state.lastName = action.payload.lastName\n        }\n    },\n    extraReducers:{\n        [userProfile.pending]: () =>{\n            //console.log(\"user pending...\")\n        },\n        [userProfile.fulfilled]: (state, action) =>{ \n            //console.log(\"user fulfilled\")\n            state.firstName = action.payload.body.firstName\n            state.lastName = action.payload.body.lastName\n        },\n        [userProfile.rejected]: (state, action) =>{  \n            //console.log(\"user rejected\") \n            state.error = action.error.message\n        }\n    }\n})\n\nexport const userSliceReducer = userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,WAAW,GAAGD,gBAAgB,CAAC,aAAa,EAAE,YAAW;EAClE,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA2C,EAAE;IAC3EC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,eAAe,EAAI,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;IAAC;EACtE,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EAClC,OAAOD,IAAI;AACf,CAAC,CAAC;AAEF,MAAME,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC1Be,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,MAAM,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvBD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO,CAACR,SAAS;MAC1CM,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO,CAACP,QAAQ;IAC5C;EACJ,CAAC;EACDQ,aAAa,EAAC;IACV,CAACnB,WAAW,CAACoB,OAAO,GAAG,MAAK;MACxB;IAAA,CACH;IACD,CAACpB,WAAW,CAACqB,SAAS,GAAG,CAACL,KAAK,EAAEC,MAAM,KAAI;MACvC;MACAD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO,CAACI,IAAI,CAACZ,SAAS;MAC/CM,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO,CAACI,IAAI,CAACX,QAAQ;IACjD,CAAC;IACD,CAACX,WAAW,CAACuB,QAAQ,GAAG,CAACP,KAAK,EAAEC,MAAM,KAAI;MACtC;MACAD,KAAK,CAACQ,KAAK,GAAGP,MAAM,CAACO,KAAK,CAACC,OAAO;IACtC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAGd,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}