{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const signInUser = createAsyncThunk('signInUser', async body => {\n  const auth = await fetch(\"http://localhost:3001/api/v1/user/login\", {\n    method: \"POST\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const authData = await auth.json();\n  localStorage.setItem(\"token\", authData.body.token);\n  console.log(authData);\n  const userProfile = await fetch(\"http://localhost:3001/api/v1/user/profile\", {\n    method: \"POST\",\n    headers: {\n      \"Authorization\": `Bearer ${authData.body.token}`\n    }\n  });\n  const userData = await userProfile.json();\n  return userData;\n});\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\"\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      signInUser(action.payload);\n      /* state.firstName = auth.firstName\n      state.lastName = auth.lastName */\n    },\n\n    logout: state => {\n      state.firstName = \"\";\n      state.lastName = \"\";\n      localStorage.setItem(\"token\", \"\");\n    }\n  },\n  extraReducers: {\n    [signInUser.pending]: state => {\n      console.log(\"loading ...\");\n    },\n    [signInUser.fulfilled]: (state, action) => {\n      console.log(\"fullfiled ...\");\n      state.msg = action.payload.message;\n      state.loading = false;\n      state.email = action.payload.body.firstName;\n      state.id = action.payload.body.lastName;\n    },\n    [signInUser.rejected]: (state, action) => {\n      console.log(\"rejected ...\");\n      state.error = action.error.message;\n    }\n  }\n});\nexport const userActions = userSlice.actions;\nexport const slice = userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","signInUser","body","auth","fetch","method","JSON","stringify","headers","authData","json","localStorage","setItem","token","console","log","userProfile","userData","initialState","firstName","lastName","userSlice","name","reducers","login","state","action","payload","logout","extraReducers","pending","fulfilled","msg","message","loading","email","id","rejected","error","userActions","actions","slice","reducer"],"sources":["/home/mehdi/Documents/nammi/src/features/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const signInUser = createAsyncThunk('signInUser', async(body) => {\n    const auth = await fetch (\"http://localhost:3001/api/v1/user/login\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n        })\n        const authData = await auth.json()\n        localStorage.setItem(\"token\", authData.body.token)\n        console.log(authData)\n        const userProfile = await fetch (\"http://localhost:3001/api/v1/user/profile\", {\n        method: \"POST\",\n        headers: { \"Authorization\" : `Bearer ${authData.body.token}`},\n        })\n        const userData = await userProfile.json()\n        return userData;\n})\n\nconst initialState = {\n    firstName: \"\",\n    lastName: \"\",\n}\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {\n        login: (state, action) => {\n            signInUser(action.payload)\n            /* state.firstName = auth.firstName\n            state.lastName = auth.lastName */\n        },\n        logout: (state) => {\n            state.firstName = \"\"\n            state.lastName = \"\"\n            localStorage.setItem(\"token\", \"\")\n        }\n    },\n    extraReducers:{\n        [signInUser.pending]: (state) =>{\n            console.log(\"loading ...\")\n        },\n        [signInUser.fulfilled]: (state, action) =>{  \n            console.log(\"fullfiled ...\")         \n            state.msg = action.payload.message\n            state.loading = false\n            state.email = action.payload.body.firstName\n            state.id = action.payload.body.lastName\n        },\n        [signInUser.rejected]: (state, action) =>{  \n            console.log(\"rejected ...\")          \n            state.error = action.error.message\n        }\n    }\n})\n\nexport const userActions = userSlice.actions\nexport const slice = userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,YAAY,EAAE,MAAME,IAAI,IAAK;EACpE,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,yCAAyC,EAAE;IACjEC,MAAM,EAAE,MAAM;IACdH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAC1BM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAC9C,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,IAAI,EAAE;EAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACP,IAAI,CAACW,KAAK,CAAC;EAClDC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;EACrB,MAAMO,WAAW,GAAG,MAAMZ,KAAK,CAAE,2CAA2C,EAAE;IAC9EC,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MAAE,eAAe,EAAI,UAASC,QAAQ,CAACP,IAAI,CAACW,KAAM;IAAC;EAC5D,CAAC,CAAC;EACF,MAAMI,QAAQ,GAAG,MAAMD,WAAW,CAACN,IAAI,EAAE;EACzC,OAAOO,QAAQ;AACvB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGtB,WAAW,CAAC;EAC1BuB,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,KAAK,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtBzB,UAAU,CAACyB,MAAM,CAACC,OAAO,CAAC;MAC1B;AACZ;IACQ,CAAC;;IACDC,MAAM,EAAGH,KAAK,IAAK;MACfA,KAAK,CAACN,SAAS,GAAG,EAAE;MACpBM,KAAK,CAACL,QAAQ,GAAG,EAAE;MACnBT,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IACrC;EACJ,CAAC;EACDiB,aAAa,EAAC;IACV,CAAC5B,UAAU,CAAC6B,OAAO,GAAIL,KAAK,IAAI;MAC5BX,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC9B,CAAC;IACD,CAACd,UAAU,CAAC8B,SAAS,GAAG,CAACN,KAAK,EAAEC,MAAM,KAAI;MACtCZ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BU,KAAK,CAACO,GAAG,GAAGN,MAAM,CAACC,OAAO,CAACM,OAAO;MAClCR,KAAK,CAACS,OAAO,GAAG,KAAK;MACrBT,KAAK,CAACU,KAAK,GAAGT,MAAM,CAACC,OAAO,CAACzB,IAAI,CAACiB,SAAS;MAC3CM,KAAK,CAACW,EAAE,GAAGV,MAAM,CAACC,OAAO,CAACzB,IAAI,CAACkB,QAAQ;IAC3C,CAAC;IACD,CAACnB,UAAU,CAACoC,QAAQ,GAAG,CAACZ,KAAK,EAAEC,MAAM,KAAI;MACrCZ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BU,KAAK,CAACa,KAAK,GAAGZ,MAAM,CAACY,KAAK,CAACL,OAAO;IACtC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAGlB,SAAS,CAACmB,OAAO;AAC5C,OAAO,MAAMC,KAAK,GAAGpB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}