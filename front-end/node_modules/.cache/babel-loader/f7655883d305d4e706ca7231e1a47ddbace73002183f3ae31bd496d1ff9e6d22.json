{"ast":null,"code":"/* import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const updateUser = createAsyncThunk('signInUser', async(body) => {\n    const update = await fetch (\"http://localhost:3001/api/v1/user/profile\", {\n        method: \"PUT\",\n        body: JSON.stringify(body),\n        headers: { \"Authorization\" : `Bearer ${localStorage.getItem('token')}`, \"Content-Type\": \"application/json\"},\n        })\n        const data = await update.json()\n        return data;\n})\n\nconst initialState = {\n    firstName: \"\",\n    lastName: \"\",\n    message: \"\",\n}\n\n\nconst updateSlice = createSlice({\n    name: \"update\",\n    initialState,\n    reducers: {\n    },\n    extraReducers:{\n        [updateUser.pending]: () =>{\n            //console.log(\"update pending...\")\n        },\n        [updateUser.fulfilled]: (state, action) =>{ \n            //console.log(\"update fulfilled\")\n            state.firstName = action.payload.body.firstName\n            state.lastName = action.payload.body.lastName\n            state.message = action.payload.message\n        },\n        [updateUser.rejected]: () =>{ \n            //console.log(\"update rejected!\") \n        }\n    }\n})\n\nexport const updateSliceReducer = updateSlice.reducer */","map":{"version":3,"names":[],"sources":["/home/mehdi/Documents/nammi/src/features/updateSlice.js"],"sourcesContent":["/* import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const updateUser = createAsyncThunk('signInUser', async(body) => {\n    const update = await fetch (\"http://localhost:3001/api/v1/user/profile\", {\n        method: \"PUT\",\n        body: JSON.stringify(body),\n        headers: { \"Authorization\" : `Bearer ${localStorage.getItem('token')}`, \"Content-Type\": \"application/json\"},\n        })\n        const data = await update.json()\n        return data;\n})\n\nconst initialState = {\n    firstName: \"\",\n    lastName: \"\",\n    message: \"\",\n}\n\n\nconst updateSlice = createSlice({\n    name: \"update\",\n    initialState,\n    reducers: {\n    },\n    extraReducers:{\n        [updateUser.pending]: () =>{\n            //console.log(\"update pending...\")\n        },\n        [updateUser.fulfilled]: (state, action) =>{ \n            //console.log(\"update fulfilled\")\n            state.firstName = action.payload.body.firstName\n            state.lastName = action.payload.body.lastName\n            state.message = action.payload.message\n        },\n        [updateUser.rejected]: () =>{ \n            //console.log(\"update rejected!\") \n        }\n    }\n})\n\nexport const updateSliceReducer = updateSlice.reducer */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}